{"version":3,"sources":["redux/contacts/actions.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["addContact","createAction","name","phoneNumber","payload","id","uuidv4","delContact","filterContact","getContacts","state","contacts","getFilter","filter","getFilteredElems","normalizedFilter","toLowerCase","contact","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","setPhoneNumber","handleChange","event","target","value","clearForm","onSubmit","e","preventDefault","map","alert","type","onChange","pattern","title","required","Filter","ContactList","onClick","className","App","initState","items","contactsManage","createReducer","contactsPrevState","elemToRemove","find","item","elemIndex","indexOf","splice","contactsFilter","_","allReducers","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","version","storage","blacklist","store","configureStore","reducer","persistReducer","devtools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5de7cfea.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const addContact = createAction(\n  \"contact/add\",\n  ({ name, phoneNumber }) => ({\n    payload: {\n      id: uuidv4(),\n      name,\n      phoneNumber,\n    },\n  })\n);\nexport const delContact = createAction(\"contact/del\");\nexport const filterContact = createAction(\"filter/value\");\n\n// export const addContact = createAction(\"contact/add\", (contact) => {\n// \treturn {\n// \t\tpayload: { ...contact },\n// \t};\n// });\n\n// export const delContact = createAction(\"contact/del\", (contact) => {\n// \treturn {\n// \t\tpayload: { ...contact },\n// \t};\n// });\n\n// export const filterContact = createAction(\"contact/filter\", (value) => {\n// \treturn {\n// \t\tpayload: value,\n// \t};\n// });\n","export const getContacts = (state) => state.contacts;\nexport const getFilter = (state) => state.filter;\n\nexport const getFilteredElems = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  // console.log(\"filter\", filter);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from \"react\";\nimport { addContact } from \"../../redux/contacts/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/selectors\";\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const [name, setName] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"phoneNumber\":\n        setPhoneNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    contacts.map((contact) => contact.name).includes(name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, phoneNumber }));\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setName(\"\");\n    setPhoneNumber(\"\");\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            onChange={handleChange}\n            name=\"phoneNumber\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\"> Add Contact</button>\n      </form>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { filterContact } from \"../../redux/contacts/actions\";\nimport { getFilter } from \"../../redux/contacts/selectors\";\n\nexport default function Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          onChange={(e) => dispatch(filterContact(e.target.value))}\n          value={value}\n        />\n      </label>\n    </>\n  );\n}\n","import React from \"react\";\nimport { delContact } from \"../../redux/contacts/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilteredElems } from \"../../redux/contacts/selectors\";\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredElems);\n\n  return (\n    <>\n      <h1>Contacts</h1>\n      <ul>\n        {contacts.map(({ id, name, phoneNumber }) => (\n          <li key={id}>\n            <p> {`${name}: ${phoneNumber}`}</p>\n\n            <button\n              id={id}\n              onClick={() => dispatch(delContact(id))}\n              type=\"button\"\n              className=\"btn\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { addContact, delContact, filterContact } from \"./actions\";\n\nconst initState = {\n  contacts: {\n    items: [\n      { id: uuidv4(), name: \"Rosie Simpson\", phoneNumber: \"459-12-56\" },\n      { id: uuidv4(), name: \"Hermione Kline\", phoneNumber: \"443-89-12\" },\n      { id: uuidv4(), name: \"Eden Clements\", phoneNumber: \"645-17-79\" },\n      { id: uuidv4(), name: \"Annie Copeland\", phoneNumber: \"227-91-26\" },\n    ],\n    filter: \"\",\n  },\n};\n\nexport const contactsManage = createReducer(initState.contacts.items, {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [delContact]: (state, { payload }) => {\n    const contactsPrevState = [...state];\n    const elemToRemove = contactsPrevState.find((item) => item.id === payload);\n    const elemIndex = contactsPrevState.indexOf(elemToRemove);\n    contactsPrevState.splice(elemIndex, 1);\n    return (state = contactsPrevState);\n  },\n});\n\nexport const contactsFilter = createReducer(initState.contacts.filter, {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport const allReducers = combineReducers({\n  contacts: contactsManage,\n  filter: contactsFilter,\n});\n","import logger from \"redux-logger\";\nimport { allReducers } from \"./contacts/reducers\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: \"contactsValues\",\n  version: 1,\n  storage,\n  blacklist: [\"filter\"],\n};\n\nexport const store = configureStore({\n  reducer: persistReducer(persistConfig, allReducers),\n  middleware,\n  devtools: process.env.NODE_ENV === \"development\",\n});\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}